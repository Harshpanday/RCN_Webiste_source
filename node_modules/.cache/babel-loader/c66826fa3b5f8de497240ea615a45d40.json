{"ast":null,"code":"import { renderSlot as _renderSlot, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"resize_col_body\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"resize_col\",\n    style: _normalizeStyle({\n      width: $data.reWidth + 'px',\n      height: $props.height\n    })\n  }, [_createElementVNode(\"div\", _hoisted_1, [_renderSlot(_ctx.$slots, \"default\")]), _createElementVNode(\"div\", {\n    class: \"slider_col\",\n    onTouchstartPassive: _cache[0] || (_cache[0] = (...args) => $options.mobileResizeCol && $options.mobileResizeCol(...args)),\n    onMousedown: _cache[1] || (_cache[1] = (...args) => $options.resizeCol && $options.resizeCol(...args)),\n    style: _normalizeStyle({\n      width: $props.sliderWidth + 'px'\n    })\n  }, null, 36\n  /* STYLE, HYDRATE_EVENTS */\n  )], 4\n  /* STYLE */\n  );\n}","map":{"version":3,"mappings":";;EAESA,KAAK,EAAC;;;uBADbC,oBAYM,KAZN,EAYM;IAZDD,KAAK,EAAC,YAYL;IAZmBE,KAAK;MAAAC,OAAWC,gBAAO,IAAlB;MAAkBC,QAAiBC;IAAnC;EAYxB,CAZN,GACEC,oBAEM,KAFN,cAEM,CADJC,YAAaC,WAAb,EAAa,SAAb,CACI,CAFN,GAGAF,oBAOO,KAPP,EAOO;IANLP,KAAK,EAAC,YAMD;gEALgBU,8DAKhB;IAJJC,WAAS,yCAAED,iDAAF,CAIL;IAHJR,KAAK;aAAoBI,qBAAW;IAA/B;EAGD,CAPP;;EAAA,EAJF;;EAAA","names":["class","_createElementBlock","style","width","$data","height","$props","_createElementVNode","_renderSlot","_ctx","$options","onMousedown"],"sourceRoot":"","sources":["C:\\Users\\user\\Desktop\\RA\\RCN\\rcn_site\\node_modules\\vue-resizer\\ResizeCol.vue"],"sourcesContent":["<template>\r\n  <div class=\"resize_col\" :style=\"{ width: reWidth + 'px', height: height }\">\r\n    <div class=\"resize_col_body\">\r\n      <slot></slot>\r\n    </div>\r\n    <div\r\n      class=\"slider_col\"\r\n      @touchstart.passive=\"mobileResizeCol\"\r\n      @mousedown=\"resizeCol\"\r\n      :style=\"{\r\n        width: sliderWidth + 'px',\r\n      }\"\r\n    ></div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"ResizeCol\",\r\n  props: {\r\n    sliderWidth: {\r\n      type: Number,\r\n      default: 20,\r\n    },\r\n    width: {\r\n      type: Number,\r\n      default: 400,\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: \"400px\",\r\n    },\r\n    sliderColor: {\r\n      type: String,\r\n      default: \"#6f808d\",\r\n    },\r\n    sliderBgColor: {\r\n      type: String,\r\n      default: \"#1f2e3a\",\r\n    },\r\n    sliderHoverColor: {\r\n      type: String,\r\n      default: \"#6f808d\",\r\n    },\r\n    sliderBgHoverColor: {\r\n      type: String,\r\n      default: \"#16222a\",\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      reWidth: this.width,\r\n      isDragging: false,\r\n    };\r\n  },\r\n  methods: {\r\n    mobileResizeCol(e) {\r\n      e = e || window.event;\r\n      e.stopPropagation();\r\n      let oldPos = e.changedTouches[0].clientX;\r\n      let oldWidth = this.reWidth;\r\n      let newPos = 0;\r\n      let newWidth = 0;\r\n      const vue = this;\r\n      this.isDragging = true;\r\n      this.$emit(\"isDragging\", this.isDragging);\r\n      document.ontouchmove = sliderDrag;\r\n      document.ontouchend = cancelSliderDrag;\r\n      function sliderDrag(e) {\r\n        if (this.time && Date.now() - this.time < 40) return;\r\n        this.time = Date.now();\r\n        e = e || window.event;\r\n        e.stopPropagation();\r\n        newPos = e.changedTouches[0].clientX;\r\n        const movingDistance = oldPos - newPos;\r\n        newWidth = parseInt(oldWidth - movingDistance);\r\n        if (newWidth <= 20) {\r\n          vue.reWidth = 20;\r\n        } else {\r\n          vue.reWidth = newWidth;\r\n        };\r\n        vue.$emit(\"dragging\", vue.reWidth);\r\n      }\r\n      function cancelSliderDrag() {\r\n        vue.isDragging = false;\r\n        vue.$emit(\"isDragging\", vue.isDragging);\r\n        document.ontouchmove = null;\r\n        document.ontouchend = null;\r\n      }\r\n    },\r\n    resizeCol(e) {\r\n      e = e || window.event;\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      let oldPos = e.clientX;\r\n      let oldWidth = this.reWidth;\r\n      let newPos = 0;\r\n      let newWidth = 0;\r\n      const vue = this;\r\n      this.isDragging = true;\r\n      this.$emit(\"isDragging\", this.isDragging);\r\n      document.onmousemove = sliderDrag;\r\n      document.onmouseup = cancelSliderDrag;\r\n      function sliderDrag(e) {\r\n        if (this.time && Date.now() - this.time < 40) return;\r\n        this.time = Date.now();\r\n        e = e || window.event;\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        newPos = e.clientX;\r\n        const movingDistance = oldPos - newPos;\r\n        newWidth = parseInt(oldWidth - movingDistance);\r\n        if (newWidth <= 20) {\r\n          vue.reWidth = 20;\r\n        } else {\r\n          vue.reWidth = newWidth;\r\n        };\r\n        vue.$emit(\"dragging\", vue.reWidth);\r\n      }\r\n      function cancelSliderDrag() {\r\n        vue.isDragging = false;\r\n        vue.$emit(\"isDragging\", vue.isDragging);\r\n        document.onmouseup = null;\r\n        document.onmousemove = null;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.resize_col {\r\n  position: relative;\r\n  overflow: hidden;\r\n  box-sizing: border-box;\r\n  padding-right: 20px;\r\n}\r\n.resize_col * {\r\n  box-sizing: border-box;\r\n}\r\n.resize_col_body {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.resize_col > .slider_col {\r\n  transition: background 0.2s;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  z-index: 1;\r\n  cursor: col-resize;\r\n  height: 100%;\r\n  background: v-bind(\"sliderBgColor\");\r\n}\r\n.resize_col > .slider_col:before {\r\n  transition: background-color 0.2s;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 31%;\r\n  transform: translateY(-50%);\r\n  content: \"\";\r\n  display: block;\r\n  width: 1px;\r\n  height: 24%;\r\n  min-height: 30px;\r\n  max-height: 70px;\r\n  background-color: v-bind(\"sliderColor\");\r\n}\r\n.resize_col > .slider_col:after {\r\n  transition: background-color 0.2s;\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 31%;\r\n  transform: translateY(-50%);\r\n  content: \"\";\r\n  display: block;\r\n  width: 1px;\r\n  height: 24%;\r\n  min-height: 30px;\r\n  max-height: 70px;\r\n  background-color: v-bind(\"sliderColor\");\r\n}\r\n.resize_col > .slider_col:hover:before,\r\n.resize_col > .slider_col:hover:after,\r\n.resize_col > .slider_col:active:before,\r\n.resize_col > .slider_col:active:after {\r\n  background-color: v-bind(\"sliderHoverColor\");\r\n}\r\n.resize_col > .slider_col:hover,\r\n.resize_col > .slider_col:active {\r\n  background: v-bind(\"sliderBgHoverColor\");\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}
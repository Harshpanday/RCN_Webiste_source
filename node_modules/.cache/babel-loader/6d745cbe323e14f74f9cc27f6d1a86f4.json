{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a2, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a2, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a2, prop, b[prop]);\n  }\n  return a2;\n};\n\nvar __spreadProps = (a2, b) => __defProps(a2, __getOwnPropDescs(b));\n\nimport { watch, toRef } from \"vue\";\n\nfunction center(x2, y2) {\n  var nodes,\n      strength = 1;\n  if (x2 == null) x2 = 0;\n  if (y2 == null) y2 = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = (sx / n - x2) * strength, sy = (sy / n - y2) * strength, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n  };\n\n  force.x = function (_) {\n    return arguments.length ? (x2 = +_, force) : x2;\n  };\n\n  force.y = function (_) {\n    return arguments.length ? (y2 = +_, force) : y2;\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  return force;\n}\n\nfunction tree_add(d) {\n  const x2 = +this._x.call(null, d),\n        y2 = +this._y.call(null, d);\n  return add(this.cover(x2, y2), x2, y2, d);\n}\n\nfunction add(tree, x2, y2, d) {\n  if (isNaN(x2) || isNaN(y2)) return tree;\n  var parent,\n      node = tree._root,\n      leaf = {\n    data: d\n  },\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n  if (!node) return tree._root = leaf, tree;\n\n  while (node.length) {\n    if (right = x2 >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y2 >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x2 === xp && y2 === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x2 >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y2 >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | xp >= xm));\n\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d,\n      i,\n      n = data.length,\n      x2,\n      y2,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x2 = +this._x.call(null, d = data[i])) || isNaN(y2 = +this._y.call(null, d))) continue;\n    xz[i] = x2;\n    yz[i] = y2;\n    if (x2 < x0) x0 = x2;\n    if (x2 > x1) x1 = x2;\n    if (y2 < y0) y0 = y2;\n    if (y2 > y1) y1 = y2;\n  }\n\n  if (x0 > x1 || y0 > y1) return this;\n  this.cover(x0, y0).cover(x1, y1);\n\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nfunction tree_cover(x2, y2) {\n  if (isNaN(x2 = +x2) || isNaN(y2 = +y2)) return this;\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x2)) + 1;\n    y1 = (y0 = Math.floor(y2)) + 1;\n  } else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x2 || x2 >= x1 || y0 > y2 || y2 >= y1) {\n      i = (y2 < y0) << 1 | x2 < x0;\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n\n      switch (i) {\n        case 0:\n          x1 = x0 + z, y1 = y0 + z;\n          break;\n\n        case 1:\n          x0 = x1 - z, y1 = y0 + z;\n          break;\n\n        case 2:\n          x1 = x0 + z, y0 = y1 - z;\n          break;\n\n        case 3:\n          x0 = x1 - z, y0 = y1 - z;\n          break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n\nfunction tree_data() {\n  var data = [];\n  this.visit(function (node) {\n    if (!node.length) do data.push(node.data); while (node = node.next);\n  });\n  return data;\n}\n\nfunction tree_extent(_) {\n  return arguments.length ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1]) : isNaN(this._x0) ? void 0 : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n\nfunction Quad(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n\nfunction tree_find(x2, y2, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x22,\n      y22,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;else {\n    x0 = x2 - radius, y0 = y2 - radius;\n    x3 = x2 + radius, y3 = y2 + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n    if (!(node = q.node) || (x1 = q.x0) > x3 || (y1 = q.y0) > y3 || (x22 = q.x1) < x0 || (y22 = q.y1) < y0) continue;\n\n    if (node.length) {\n      var xm = (x1 + x22) / 2,\n          ym = (y1 + y22) / 2;\n      quads.push(new Quad(node[3], xm, ym, x22, y22), new Quad(node[2], x1, ym, xm, y22), new Quad(node[1], xm, y1, x22, ym), new Quad(node[0], x1, y1, xm, ym));\n\n      if (i = (y2 >= ym) << 1 | x2 >= xm) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    } else {\n      var dx = x2 - +this._x.call(null, node.data),\n          dy = y2 - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x2 - d, y0 = y2 - d;\n        x3 = x2 + d, y3 = y2 + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n\nfunction tree_remove(d) {\n  if (isNaN(x2 = +this._x.call(null, d)) || isNaN(y2 = +this._y.call(null, d))) return this;\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x2,\n      y2,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n  if (!node) return this;\n  if (node.length) while (true) {\n    if (right = x2 >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y2 >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[i + 1 & 3] || parent[i + 2 & 3] || parent[i + 3 & 3]) retainer = parent, j = i;\n  }\n\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\n  if (next = node.next) delete node.next;\n  if (previous) return next ? previous.next = next : delete previous.next, this;\n  if (!parent) return this._root = next, this;\n  next ? parent[i] = next : delete parent[i];\n\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3]) && node === (parent[3] || parent[2] || parent[1] || parent[0]) && !node.length) {\n    if (retainer) retainer[j] = node;else this._root = node;\n  }\n\n  return this;\n}\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\n  return this;\n}\n\nfunction tree_root() {\n  return this._root;\n}\n\nfunction tree_size() {\n  var size = 0;\n  this.visit(function (node) {\n    if (!node.length) do ++size; while (node = node.next);\n  });\n  return size;\n}\n\nfunction tree_visit(callback) {\n  var quads = [],\n      q,\n      node = this._root,\n      child,\n      x0,\n      y0,\n      x1,\n      y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2,\n          ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n\n  return this;\n}\n\nfunction tree_visitAfter(callback) {\n  var quads = [],\n      next = [],\n      q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\n  while (q = quads.pop()) {\n    var node = q.node;\n\n    if (node.length) {\n      var child,\n          x0 = q.x0,\n          y0 = q.y0,\n          x1 = q.x1,\n          y1 = q.y1,\n          xm = (x0 + x1) / 2,\n          ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n\n    next.push(q);\n  }\n\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n\n  return this;\n}\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction tree_x(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction tree_y(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n\nfunction quadtree(nodes, x2, y2) {\n  var tree = new Quadtree(x2 == null ? defaultX : x2, y2 == null ? defaultY : y2, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x2, y2, x0, y0, x1, y1) {\n  this._x = x2;\n  this._y = y2;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = void 0;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {\n    data: leaf.data\n  },\n      next = copy;\n\n  while (leaf = leaf.next) next = next.next = {\n    data: leaf.data\n  };\n\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function () {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n  if (!node) return copy;\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n  nodes = [{\n    source: node,\n    target: copy._root = new Array(4)\n  }];\n\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({\n          source: child,\n          target: node.target[i] = new Array(4)\n        });else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction constant(x2) {\n  return function () {\n    return x2;\n  };\n}\n\nfunction jiggle(random) {\n  return (random() - 0.5) * 1e-6;\n}\n\nfunction x$2(d) {\n  return d.x + d.vx;\n}\n\nfunction y$2(d) {\n  return d.y + d.vy;\n}\n\nfunction collide(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i,\n        n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x$2, y$2).visitAfter(prepare);\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data,\n          rj = quad.r,\n          r = ri + rj;\n\n      if (data) {\n        if (data.index > node.index) {\n          var x2 = xi - data.x - data.vx,\n              y2 = yi - data.y - data.vy,\n              l = x2 * x2 + y2 * y2;\n\n          if (l < r * r) {\n            if (x2 === 0) x2 = jiggle(random), l += x2 * x2;\n            if (y2 === 0) y2 = jiggle(random), l += y2 * y2;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x2 *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y2 *= l) * r;\n            data.vx -= x2 * (r = 1 - r);\n            data.vy -= y2 * r;\n          }\n        }\n\n        return;\n      }\n\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length,\n        node;\n    radii = new Array(n);\n\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function (_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function (_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nfunction link(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n  if (links == null) links = [];\n\n  function defaultStrength(link2) {\n    return 1 / Math.min(count[link2.source.index], count[link2.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link2, source, target, x2, y2, l, b; i < n; ++i) {\n        link2 = links[i], source = link2.source, target = link2.target;\n        x2 = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y2 = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x2 * x2 + y2 * y2);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x2 *= l, y2 *= l;\n        target.vx -= x2 * (b = bias[i]);\n        target.vy -= y2 * b;\n        source.vx += x2 * (b = 1 - b);\n        source.vy += y2 * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length,\n        m2 = links.length,\n        nodeById = new Map(nodes.map((d, i2) => [id(d, i2, nodes), d])),\n        link2;\n\n    for (i = 0, count = new Array(n); i < m2; ++i) {\n      link2 = links[i], link2.index = i;\n      if (typeof link2.source !== \"object\") link2.source = find(nodeById, link2.source);\n      if (typeof link2.target !== \"object\") link2.target = find(nodeById, link2.target);\n      count[link2.source.index] = (count[link2.source.index] || 0) + 1;\n      count[link2.target.index] = (count[link2.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m2); i < m2; ++i) {\n      link2 = links[i], bias[i] = count[link2.source.index] / (count[link2.source.index] + count[link2.target.index]);\n    }\n\n    strengths = new Array(m2), initializeStrength();\n    distances = new Array(m2), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function (_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function (_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function (_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function (_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function (_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n\nvar noop = {\n  value: () => {}\n};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || t in _ || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function (t) {\n    var name = \"\",\n        i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {\n      type: t,\n      name\n    };\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function (typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\n      return;\n    }\n\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function () {\n    var copy = {},\n        _ = this._;\n\n    for (var t in _) copy[t] = _[t].slice();\n\n    return new Dispatch(copy);\n  },\n  call: function (type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function (type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c2; i < n; ++i) {\n    if ((c2 = type[i]).name === name) {\n      return c2.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n\n  if (callback != null) type.push({\n    name,\n    value: callback\n  });\n  return type;\n}\n\nvar frame = 0,\n    timeout = 0,\n    interval = 0,\n    pokeDelay = 1e3,\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (f) {\n  setTimeout(f, 17);\n};\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call = this._time = this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function (callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;else taskHead = this;\n      taskTail = this;\n    }\n\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function () {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer();\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now();\n  ++frame;\n  var t = taskHead,\n      e;\n\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(void 0, e);\n    t = t._next;\n  }\n\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now2 = clock.now(),\n      delay = now2 - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now2;\n}\n\nfunction nap() {\n  var t0,\n      t1 = taskHead,\n      t2,\n      time = Infinity;\n\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return;\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296;\n\nfunction lcg() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nfunction simulation(nodes) {\n  var simulation2,\n      alpha = 1,\n      alphaMin = 1e-3,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = /* @__PURE__ */new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation2);\n\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation2);\n    }\n  }\n\n  function tick(iterations) {\n    var i,\n        n = nodes.length,\n        node;\n    if (iterations === void 0) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n      forces.forEach(function (force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation2;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i),\n            angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n  return simulation2 = {\n    tick,\n    restart: function () {\n      return stepper.restart(step), simulation2;\n    },\n    stop: function () {\n      return stepper.stop(), simulation2;\n    },\n    nodes: function (_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation2) : nodes;\n    },\n    alpha: function (_) {\n      return arguments.length ? (alpha = +_, simulation2) : alpha;\n    },\n    alphaMin: function (_) {\n      return arguments.length ? (alphaMin = +_, simulation2) : alphaMin;\n    },\n    alphaDecay: function (_) {\n      return arguments.length ? (alphaDecay = +_, simulation2) : +alphaDecay;\n    },\n    alphaTarget: function (_) {\n      return arguments.length ? (alphaTarget = +_, simulation2) : alphaTarget;\n    },\n    velocityDecay: function (_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation2) : 1 - velocityDecay;\n    },\n    randomSource: function (_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation2) : random;\n    },\n    force: function (name, _) {\n      return arguments.length > 1 ? (_ == null ? forces.delete(name) : forces.set(name, initializeForce(_)), simulation2) : forces.get(name);\n    },\n    find: function (x2, y2, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n      if (radius == null) radius = Infinity;else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x2 - node.x;\n        dy = y2 - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n    on: function (name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation2) : event.on(name);\n    }\n  };\n}\n\nfunction manyBody() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i,\n        n = nodes.length,\n        tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length,\n        node2;\n    strengths = new Array(n);\n\n    for (i = 0; i < n; ++i) node2 = nodes[i], strengths[node2.index] = +strength(node2, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength2 = 0,\n        q,\n        c2,\n        weight = 0,\n        x2,\n        y2,\n        i;\n\n    if (quad.length) {\n      for (x2 = y2 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c2 = Math.abs(q.value))) {\n          strength2 += q.value, weight += c2, x2 += c2 * q.x, y2 += c2 * q.y;\n        }\n      }\n\n      quad.x = x2 / weight;\n      quad.y = y2 / weight;\n    } else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n\n      do strength2 += strengths[q.data.index]; while (q = q.next);\n    }\n\n    quad.value = strength2;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n    var x3 = quad.x - node.x,\n        y2 = quad.y - node.y,\n        w = x2 - x1,\n        l = x3 * x3 + y2 * y2;\n\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x3 === 0) x3 = jiggle(random), l += x3 * x3;\n        if (y2 === 0) y2 = jiggle(random), l += y2 * y2;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x3 * quad.value * alpha / l;\n        node.vy += y2 * quad.value * alpha / l;\n      }\n\n      return true;\n    } else if (quad.length || l >= distanceMax2) return;\n\n    if (quad.data !== node || quad.next) {\n      if (x3 === 0) x3 = jiggle(random), l += x3 * x3;\n      if (y2 === 0) y2 = jiggle(random), l += y2 * y2;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x3 * w;\n      node.vy += y2 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function (_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function (_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function (_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function (_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n\nfunction radial(radius, x2, y2) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x2 == null) x2 = 0;\n  if (y2 == null) y2 = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x2 || 1e-6,\n          dy = node.y - y2 || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function (_) {\n    return arguments.length ? (x2 = +_, force) : x2;\n  };\n\n  force.y = function (_) {\n    return arguments.length ? (y2 = +_, force) : y2;\n  };\n\n  return force;\n}\n\nfunction x(x2) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n  if (typeof x2 !== \"function\") x2 = constant(x2 == null ? 0 : +x2);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x2(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function (_) {\n    return arguments.length ? (x2 = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x2;\n  };\n\n  return force;\n}\n\nfunction y(y2) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n  if (typeof y2 !== \"function\") y2 = constant(y2 == null ? 0 : +y2);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y2(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function (_) {\n    return arguments.length ? (y2 = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y2;\n  };\n\n  return force;\n}\n\nvar d3 = /* @__PURE__ */Object.freeze({\n  __proto__: null,\n  [Symbol.toStringTag]: \"Module\",\n  forceCenter: center,\n  forceCollide: collide,\n  forceLink: link,\n  forceManyBody: manyBody,\n  forceRadial: radial,\n  forceSimulation: simulation,\n  forceX: x,\n  forceY: y\n});\n\nclass ForceLayout {\n  constructor(options = {}) {\n    this.options = options;\n  }\n\n  activate(parameters) {\n    const {\n      nodePositions,\n      nodes,\n      edges,\n      emitter,\n      svgPanZoom\n    } = parameters;\n    let {\n      nodeLayouts,\n      nodeLayoutMap\n    } = this.buildNodeLayouts(nodes.value, nodePositions, {\n      x: 0,\n      y: 0\n    });\n    const simulation2 = this.createSimulation(nodeLayouts, this.forceLayoutEdges(edges.value, nodes.value));\n    simulation2.on(\"tick\", () => {\n      var _a, _b, _c;\n\n      for (const node of nodeLayouts) {\n        const layout = (_a = nodePositions.value) == null ? void 0 : _a[node.id];\n\n        if (layout) {\n          layout.x = (_b = node.x) != null ? _b : 0;\n          layout.y = (_c = node.y) != null ? _c : 0;\n        }\n      }\n    });\n\n    const restartSimulation = () => {\n      simulation2.alpha(0.1).restart();\n    };\n\n    const onDrag = positions => {\n      for (const [id, pos] of Object.entries(positions)) {\n        const nodePos = nodeLayoutMap[id];\n        nodePos.fx = pos.x;\n        nodePos.fy = pos.y;\n      }\n\n      restartSimulation();\n    };\n\n    const onDragEnd = positions => {\n      var _a;\n\n      for (const [id, pos] of Object.entries(positions)) {\n        const layout = this.getNodeLayout(nodePositions, id);\n        const nodePos = (_a = nodeLayoutMap == null ? void 0 : nodeLayoutMap[id]) != null ? _a : {\n          x: 0,\n          y: 0\n        };\n\n        if (layout.value.fixed || this.options.positionFixedByDrag) {\n          nodePos.fx = pos.x;\n          nodePos.fy = pos.y;\n          layout.value.fixed = true;\n        } else {\n          nodePos.x = pos.x;\n          nodePos.y = pos.y;\n          delete nodePos.fx;\n          delete nodePos.fy;\n        }\n      }\n\n      restartSimulation();\n    };\n\n    const onClick = ({\n      node,\n      event\n    }) => {\n      if (this.options.positionFixedByClickWithAltKey && event.altKey) {\n        const layout = this.getNodeLayout(nodePositions, node);\n        let nodePos = nodeLayoutMap == null ? void 0 : nodeLayoutMap[node];\n\n        if (!nodePos) {\n          nodePos = {\n            id: node,\n            x: 0,\n            y: 0\n          };\n          nodeLayoutMap[node] = nodePos;\n        }\n\n        if (layout.value.fixed) {\n          delete layout.value.fixed;\n          nodePos.x = nodePos.fx || nodePos.x;\n          nodePos.y = nodePos.fy || nodePos.y;\n          delete nodePos.fx;\n          delete nodePos.fy;\n        } else {\n          layout.value.fixed = true;\n          nodePos.fx = nodePos.x;\n          nodePos.fy = nodePos.y;\n        }\n\n        restartSimulation();\n      }\n    };\n\n    const stopNetworkWatch = watch(() => [Object.keys(nodes.value), Object.values(edges.value).map(e => `${e.source}=${e.target}`)], () => {\n      const area = svgPanZoom.getViewArea();\n      ({\n        nodeLayouts,\n        nodeLayoutMap\n      } = this.buildNodeLayouts(nodes.value, nodePositions, area.center));\n      simulation2.nodes(nodeLayouts);\n      const forceEdges = simulation2.force(\"edge\");\n\n      if (forceEdges) {\n        forceEdges.links(this.forceLayoutEdges(edges.value, nodes.value));\n      }\n\n      restartSimulation();\n    });\n    emitter.on(\"node:dragstart\", onDrag);\n    emitter.on(\"node:pointermove\", onDrag);\n    emitter.on(\"node:dragend\", onDragEnd);\n    emitter.on(\"node:click\", onClick);\n\n    this.onDeactivate = () => {\n      simulation2.stop();\n      stopNetworkWatch();\n      emitter.off(\"node:dragstart\", onDrag);\n      emitter.off(\"node:pointermove\", onDrag);\n      emitter.off(\"node:dragend\", onDragEnd);\n      emitter.off(\"node:click\", onClick);\n    };\n  }\n\n  deactivate() {\n    if (this.onDeactivate) {\n      this.onDeactivate();\n    }\n  }\n\n  createSimulation(nodes, edges) {\n    if (this.options.createSimulation) {\n      return this.options.createSimulation(d3, nodes, edges);\n    } else {\n      const forceLink = link(edges).id(d => d.id);\n      return simulation(nodes).force(\"edge\", forceLink.distance(100)).force(\"charge\", manyBody()).force(\"collide\", collide(50).strength(0.2)).force(\"center\", center().strength(0.05)).alphaMin(1e-3);\n    }\n  }\n\n  buildNodeLayouts(nodes, nodePositions, newPosition) {\n    const newNodes = Object.keys(nodes).filter(n => !(n in nodePositions.value));\n\n    for (const nodeId of newNodes) {\n      nodePositions.value[nodeId] = __spreadValues({}, newPosition);\n    }\n\n    const nodeLayouts = this.forceNodeLayouts(nodePositions.value);\n    const nodeLayoutMap = Object.fromEntries(nodeLayouts.map(n => [n.id, n]));\n    return {\n      nodeLayouts,\n      nodeLayoutMap\n    };\n  }\n\n  forceNodeLayouts(layouts) {\n    return Object.entries(layouts).map(([id, v]) => {\n      return v.fixed ? __spreadProps(__spreadValues({\n        id\n      }, v), {\n        fx: v.x,\n        fy: v.y\n      }) : __spreadValues({\n        id\n      }, v);\n    });\n  }\n\n  forceLayoutEdges(edges, nodes) {\n    return Object.values(edges).filter(edge => edge.source in nodes && edge.target in nodes).map(v => ({\n      source: v.source,\n      target: v.target\n    }));\n  }\n\n  getNodeLayout(nodePositions, node) {\n    const layout = toRef(nodePositions.value, node);\n\n    if (!layout.value) {\n      layout.value = {\n        x: 0,\n        y: 0\n      };\n    }\n\n    return layout;\n  }\n\n}\n\nexport { ForceLayout };","map":{"version":3,"mappings":"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","names":["x2","y2","nodes","strength","i","n","length","node","sx","sy","x","y","force","initialize","_","arguments","d","_x","call","_y","add","cover","tree","isNaN","parent","_root","leaf","data","x0","_x0","y0","_y0","x1","_x1","y1","_y1","xm","ym","xp","yp","right","bottom","j","next","Array","xz","yz","Infinity","Math","floor","z","visit","push","radius","x22","y22","x3","y3","quads","q","Quad","pop","dx","dy","d2","sqrt","retainer","previous","remove","size","callback","child","Quadtree","defaultX","defaultY","NaN","addAll","copy","treeProto","quadtree","prototype","leaf_copy","source","target","tree_add","tree_addAll","tree_cover","tree_data","extent","tree_extent","find","tree_find","tree_remove","removeAll","tree_removeAll","root","tree_root","tree_size","tree_visit","visitAfter","tree_visitAfter","tree_x","tree_y","random","vx","vy","radii","iterations","constant","xi","yi","ri","ri2","k","prepare","index","apply","quad","rj","r","l","jiggle","_nodes","_random","nodeById","nodeId","get","Error","links","id","defaultStrength","strengths","distance","distances","count","bias","link2","min","alpha","b","m2","Map","map","i2","initializeStrength","initializeDistance","noop","value","t","test","Dispatch","typenames","types","trim","split","name","indexOf","slice","hasOwnProperty","type","dispatch","constructor","on","typename","T","parseTypenames","set","that","args","c2","concat","frame","timeout","interval","pokeDelay","taskHead","taskTail","clockLast","clockNow","clockSkew","clock","performance","now","Date","setFrame","window","requestAnimationFrame","bind","f","setTimeout","clearNow","_call","_time","_next","Timer","timer","restart","delay","time","TypeError","sleep","stop","e","timerFlush","nap","now2","t0","t1","t2","clearTimeout","wake","clearInterval","setInterval","poke","a","c","m","s","initialRadius","initialAngle","PI","simulation2","alphaMin","alphaDecay","pow","alphaTarget","velocityDecay","forces","stepper","step","event","lcg","tick","forEach","fx","fy","angle","cos","sin","initializeNodes","initializeForce","randomSource","delete","closest","distanceMin2","distanceMax2","theta2","accumulate","node2","strength2","weight","abs","w","distanceMin","distanceMax","theta","radiuses","ForceLayout","options","activate","parameters","nodePositions","edges","emitter","svgPanZoom","nodeLayouts","nodeLayoutMap","buildNodeLayouts","createSimulation","forceLayoutEdges","layout","restartSimulation","onDrag","positions","pos","Object","entries","nodePos","onDragEnd","getNodeLayout","fixed","positionFixedByDrag","onClick","positionFixedByClickWithAltKey","altKey","stopNetworkWatch","watch","keys","values","area","getViewArea","center","forceEdges","onDeactivate","off","deactivate","d3","forceLink","d3.forceLink","d3.forceSimulation","d3.forceManyBody","d3.forceCollide","d3.forceCenter","newPosition","newNodes","filter","__spreadValues","forceNodeLayouts","fromEntries","layouts","v","__spreadProps","edge","toRef"],"sources":["../node_modules/d3-force/src/center.js","../node_modules/d3-quadtree/src/add.js","../node_modules/d3-quadtree/src/cover.js","../node_modules/d3-quadtree/src/data.js","../node_modules/d3-quadtree/src/extent.js","../node_modules/d3-quadtree/src/quad.js","../node_modules/d3-quadtree/src/find.js","../node_modules/d3-quadtree/src/remove.js","../node_modules/d3-quadtree/src/root.js","../node_modules/d3-quadtree/src/size.js","../node_modules/d3-quadtree/src/visit.js","../node_modules/d3-quadtree/src/visitAfter.js","../node_modules/d3-quadtree/src/x.js","../node_modules/d3-quadtree/src/y.js","../node_modules/d3-quadtree/src/quadtree.js","../node_modules/d3-force/src/constant.js","../node_modules/d3-force/src/jiggle.js","../node_modules/d3-force/src/collide.js","../node_modules/d3-force/src/link.js","../node_modules/d3-dispatch/src/dispatch.js","../node_modules/d3-timer/src/timer.js","../node_modules/d3-force/src/lcg.js","../node_modules/d3-force/src/simulation.js","../node_modules/d3-force/src/manyBody.js","../node_modules/d3-force/src/radial.js","../node_modules/d3-force/src/x.js","../node_modules/d3-force/src/y.js","../src/layouts/force.ts"],"sourcesContent":["export default function(x, y) {\n  var nodes, strength = 1;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  return force;\n}\n","export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","import { Ref, toRef, watch } from \"vue\"\nimport { Edges, NodePositions, Nodes, Position } from \"@/common/types\"\nimport { OnClickHandler, OnDragHandler } from \"@/common/types\"\nimport { LayoutActivateParameters, LayoutHandler } from \"./handler\"\nimport * as d3 from \"d3-force\"\n\nexport interface ForceNodeDatum extends d3.SimulationNodeDatum {\n  id: string\n}\n\nexport interface ForceEdgeDatum {\n  source: string\n  target: string\n}\n\ntype d3Type = typeof d3\n\ntype CreateSimulationFunction = (\n  d3: d3Type,\n  nodes: ForceNodeDatum[],\n  edges: ForceEdgeDatum[]\n) => d3.Simulation<ForceNodeDatum, ForceEdgeDatum>\n\nexport type ForceLayoutParameters = {\n  positionFixedByDrag?: boolean\n  positionFixedByClickWithAltKey?: boolean\n  createSimulation?: CreateSimulationFunction\n}\n\nexport class ForceLayout implements LayoutHandler {\n  private onDeactivate?: () => void\n\n  constructor(private options: ForceLayoutParameters = {}) {}\n\n  activate(parameters: LayoutActivateParameters): void {\n    const { nodePositions, nodes, edges, emitter, svgPanZoom } = parameters\n    let { nodeLayouts, nodeLayoutMap } = this.buildNodeLayouts(nodes.value, nodePositions, {\n      x: 0,\n      y: 0,\n    })\n\n    const simulation = this.createSimulation(\n      nodeLayouts,\n      this.forceLayoutEdges(edges.value, nodes.value)\n    )\n    simulation.on(\"tick\", () => {\n      for (const node of nodeLayouts) {\n        const layout = nodePositions.value?.[node.id]\n        if (layout) {\n          layout.x = node.x ?? 0\n          layout.y = node.y ?? 0\n        }\n      }\n    })\n\n    const restartSimulation = () => {\n      simulation.alpha(0.1).restart()\n    }\n\n    const onDrag: OnDragHandler = positions => {\n      for (const [id, pos] of Object.entries(positions)) {\n        const nodePos = nodeLayoutMap[id]\n        nodePos.fx = pos.x\n        nodePos.fy = pos.y\n      }\n      restartSimulation()\n    }\n\n    const onDragEnd: OnDragHandler = positions => {\n      for (const [id, pos] of Object.entries(positions)) {\n        const layout = this.getNodeLayout(nodePositions, id)\n        const nodePos: d3.SimulationNodeDatum = nodeLayoutMap?.[id] ?? { x: 0, y: 0 }\n        if (layout.value.fixed || this.options.positionFixedByDrag) {\n          nodePos.fx = pos.x\n          nodePos.fy = pos.y\n          layout.value.fixed = true\n        } else {\n          nodePos.x = pos.x\n          nodePos.y = pos.y\n          delete nodePos.fx\n          delete nodePos.fy\n        }\n      }\n      restartSimulation()\n    }\n\n    const onClick: OnClickHandler = ({ node, event }) => {\n      if (this.options.positionFixedByClickWithAltKey && event.altKey) {\n        const layout = this.getNodeLayout(nodePositions, node)\n        let nodePos: ForceNodeDatum | undefined = nodeLayoutMap?.[node]\n        if (!nodePos) {\n          nodePos = { id: node, x: 0, y: 0 }\n          nodeLayoutMap[node] = nodePos\n        }\n\n        if (layout.value.fixed) {\n          // unfix\n          delete layout.value.fixed\n          nodePos.x = nodePos.fx || nodePos.x\n          nodePos.y = nodePos.fy || nodePos.y\n          delete nodePos.fx\n          delete nodePos.fy\n        } else {\n          // fix\n          layout.value.fixed = true\n          nodePos.fx = nodePos.x\n          nodePos.fy = nodePos.y\n        }\n        restartSimulation()\n      }\n    }\n\n    const stopNetworkWatch = watch(\n      () => [\n        Object.keys(nodes.value),\n        // Watch only for changes in links, not all properties of the edge objects.\n        Object.values(edges.value).map(e => `${e.source}=${e.target}`),\n      ],\n      () => {\n        // set new node's position to center of the view\n        const area = svgPanZoom.getViewArea()\n        ;({ nodeLayouts, nodeLayoutMap } = this.buildNodeLayouts(\n          nodes.value,\n          nodePositions,\n          area.center\n        ))\n        simulation.nodes(nodeLayouts)\n        const forceEdges = simulation.force<d3.ForceLink<ForceNodeDatum, ForceEdgeDatum>>(\"edge\")\n        if (forceEdges) {\n          forceEdges.links(this.forceLayoutEdges(edges.value, nodes.value))\n        }\n        restartSimulation()\n      }\n    )\n\n    emitter.on(\"node:dragstart\", onDrag)\n    emitter.on(\"node:pointermove\", onDrag)\n    emitter.on(\"node:dragend\", onDragEnd)\n    emitter.on(\"node:click\", onClick)\n\n    this.onDeactivate = () => {\n      simulation.stop()\n      stopNetworkWatch()\n      emitter.off(\"node:dragstart\", onDrag)\n      emitter.off(\"node:pointermove\", onDrag)\n      emitter.off(\"node:dragend\", onDragEnd)\n      emitter.off(\"node:click\", onClick)\n    }\n  }\n\n  deactivate(): void {\n    if (this.onDeactivate) {\n      this.onDeactivate()\n    }\n  }\n\n  private createSimulation(\n    nodes: ForceNodeDatum[],\n    edges: ForceEdgeDatum[]\n  ): d3.Simulation<ForceNodeDatum, ForceEdgeDatum> {\n    if (this.options.createSimulation) {\n      return this.options.createSimulation(d3, nodes, edges)\n    } else {\n      const forceLink = d3.forceLink<ForceNodeDatum, ForceEdgeDatum>(edges).id(d => d.id)\n      return d3\n        .forceSimulation(nodes)\n        .force(\"edge\", forceLink.distance(100))\n        .force(\"charge\", d3.forceManyBody())\n        .force(\"collide\", d3.forceCollide(50).strength(0.2))\n        .force(\"center\", d3.forceCenter().strength(0.05))\n        .alphaMin(0.001)\n    }\n  }\n\n  private buildNodeLayouts(\n    nodes: Readonly<Nodes>,\n    nodePositions: Ref<NodePositions>,\n    newPosition: Position\n  ) {\n    const newNodes = Object.keys(nodes).filter(n => !(n in nodePositions.value))\n    for (const nodeId of newNodes) {\n      nodePositions.value[nodeId] = { ...newPosition }\n    }\n\n    const nodeLayouts = this.forceNodeLayouts(nodePositions.value)\n    const nodeLayoutMap = Object.fromEntries(nodeLayouts.map(n => [n.id, n]))\n    return { nodeLayouts, nodeLayoutMap }\n  }\n\n  private forceNodeLayouts(layouts: NodePositions): ForceNodeDatum[] {\n    return Object.entries(layouts).map(([id, v]) => {\n      return v.fixed ? { id, ...v, fx: v.x, fy: v.y } : { id, ...v }\n    })\n  }\n\n  private forceLayoutEdges(edges: Edges, nodes: Nodes): ForceEdgeDatum[] {\n    // d3-force replaces the source/target in the edge with NodeDatum\n    // objects, so build own link objects.\n    return Object.values(edges)\n      .filter(edge => edge.source in nodes && edge.target in nodes)\n      .map(v => ({\n        source: v.source,\n        target: v.target,\n      }))\n  }\n\n  private getNodeLayout(nodePositions: Ref<NodePositions>, node: string) {\n    const layout = toRef(nodePositions.value, node)\n    if (!layout.value) {\n      layout.value = { x: 0, y: 0 }\n    }\n    return layout\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"const __default__ = {\n  name: \"DragCol\",\n  props: {\n    leftPercent: {\n      type: Number,\n      default: 50\n    },\n    sliderWidth: {\n      type: Number,\n      default: 20\n    },\n    width: {\n      type: String,\n      default: \"400px\"\n    },\n    height: {\n      type: String,\n      default: \"400px\"\n    },\n    sliderColor: {\n      type: String,\n      default: \"#6f808d\"\n    },\n    sliderBgColor: {\n      type: String,\n      default: \"#1f2e3a\"\n    },\n    sliderHoverColor: {\n      type: String,\n      default: \"#6f808d\"\n    },\n    sliderBgHoverColor: {\n      type: String,\n      default: \"#16222a\"\n    }\n  },\n\n  data() {\n    return {\n      left: this.leftPercent,\n      isDragging: false\n    };\n  },\n\n  methods: {\n    mobileDragCol(e) {\n      e = e || window.event;\n      e.stopPropagation();\n      let oldPos = e.changedTouches[0].clientX;\n      let oldPosPercent = this.left;\n      let newPos = 0;\n      let newPosPercent = 0;\n      const containerWidth = this.$refs.container.offsetWidth;\n      const vue = this;\n      this.isDragging = true;\n      this.$emit(\"isDragging\", this.isDragging);\n      document.ontouchmove = sliderDrag;\n      document.ontouchend = cancelSliderDrag;\n\n      function sliderDrag(e) {\n        if (this.time && Date.now() - this.time < 40) return;\n        this.time = Date.now();\n        e = e || window.event;\n        e.stopPropagation();\n        newPos = e.changedTouches[0].clientX;\n        const movingDistancePercent = parseFloat(((oldPos - newPos) / containerWidth * 100).toFixed(3));\n        newPosPercent = oldPosPercent - movingDistancePercent;\n\n        if (newPosPercent <= 0) {\n          vue.left = 0;\n        } else if (newPosPercent >= 100) {\n          vue.left = 100;\n        } else {\n          vue.left = newPosPercent;\n        }\n\n        vue.$emit(\"dragging\", vue.left);\n      }\n\n      function cancelSliderDrag() {\n        vue.isDragging = false;\n        vue.$emit(\"isDragging\", vue.isDragging);\n        document.ontouchmove = null;\n        document.ontouchend = null;\n      }\n    },\n\n    dragCol(e) {\n      e = e || window.event;\n      e.preventDefault();\n      e.stopPropagation();\n      let oldPos = e.clientX;\n      let oldPosPercent = this.left;\n      let newPos = 0;\n      let newPosPercent = 0;\n      const containerWidth = this.$refs.container.offsetWidth;\n      const vue = this;\n      this.isDragging = true;\n      this.$emit(\"isDragging\", this.isDragging);\n      document.onmousemove = sliderDrag;\n      document.onmouseup = cancelSliderDrag;\n\n      function sliderDrag(e) {\n        if (this.time && Date.now() - this.time < 40) return;\n        this.time = Date.now();\n        e = e || window.event;\n        e.preventDefault();\n        e.stopPropagation();\n        newPos = e.clientX;\n        const movingDistancePercent = parseFloat(((oldPos - newPos) / containerWidth * 100).toFixed(3));\n        newPosPercent = oldPosPercent - movingDistancePercent;\n\n        if (newPosPercent <= 0) {\n          vue.left = 0;\n        } else if (newPosPercent >= 100) {\n          vue.left = 100;\n        } else {\n          vue.left = newPosPercent;\n        }\n\n        vue.$emit(\"dragging\", vue.left);\n      }\n\n      function cancelSliderDrag() {\n        vue.isDragging = false;\n        vue.$emit(\"isDragging\", vue.isDragging);\n        document.onmouseup = null;\n        document.onmousemove = null;\n      }\n    }\n\n  }\n};\nimport { useCssVars as _useCssVars } from 'vue';\n\nconst __injectCSSVars__ = () => {\n  _useCssVars(_ctx => ({\n    \"a1eef186-sliderBgColor\": _ctx.sliderBgColor,\n    \"a1eef186-sliderColor\": _ctx.sliderColor,\n    \"a1eef186-sliderHoverColor\": _ctx.sliderHoverColor,\n    \"a1eef186-sliderBgHoverColor\": _ctx.sliderBgHoverColor\n  }));\n};\n\nconst __setup__ = __default__.setup;\n__default__.setup = __setup__ ? (props, ctx) => {\n  __injectCSSVars__();\n\n  return __setup__(props, ctx);\n} : __injectCSSVars__;\nexport default __default__;","map":{"version":3,"mappings":"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","names":["__default__","name","props","leftPercent","type","Number","default","sliderWidth","width","String","height","sliderColor","sliderBgColor","sliderHoverColor","sliderBgHoverColor","data","left","isDragging","methods","mobileDragCol","e","window","event","stopPropagation","oldPos","changedTouches","clientX","oldPosPercent","newPos","newPosPercent","containerWidth","$refs","container","offsetWidth","vue","$emit","document","ontouchmove","sliderDrag","ontouchend","cancelSliderDrag","time","Date","now","movingDistancePercent","parseFloat","toFixed","dragCol","preventDefault","onmousemove","onmouseup"],"sourceRoot":"","sources":["C:\\Users\\user\\Desktop\\RA\\RCN\\rcn_site\\node_modules\\vue-resizer\\DragCol.vue"],"sourcesContent":["<template>\r\n  <div\r\n    class=\"drager_col\"\r\n    ref=\"container\"\r\n    :style=\"{ width: width, height: height }\"\r\n  >\r\n    <div class=\"drager_left\" :style=\"{ width: left + '%' }\">\r\n      <div>\r\n        <slot name=\"left\"></slot>\r\n      </div>\r\n    </div>\r\n    <div\r\n      class=\"slider_col\"\r\n      @touchstart.passive=\"mobileDragCol\"\r\n      @mousedown=\"dragCol\"\r\n      :style=\"{\r\n        width: sliderWidth + 'px',\r\n        marginLeft: -sliderWidth / 2 + 'px',\r\n        marginRight: -sliderWidth / 2 + 'px',\r\n      }\"\r\n    ></div>\r\n    <div class=\"drager_right\" :style=\"{ width: 100 - left + '%' }\">\r\n      <div>\r\n        <slot name=\"right\"></slot>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"DragCol\",\r\n  props: {\r\n    leftPercent: {\r\n      type: Number,\r\n      default: 50,\r\n    },\r\n    sliderWidth: {\r\n      type: Number,\r\n      default: 20,\r\n    },\r\n    width: {\r\n      type: String,\r\n      default: \"400px\",\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: \"400px\",\r\n    },\r\n    sliderColor: {\r\n      type: String,\r\n      default: \"#6f808d\",\r\n    },\r\n    sliderBgColor: {\r\n      type: String,\r\n      default: \"#1f2e3a\",\r\n    },\r\n    sliderHoverColor: {\r\n      type: String,\r\n      default: \"#6f808d\",\r\n    },\r\n    sliderBgHoverColor: {\r\n      type: String,\r\n      default: \"#16222a\",\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      left: this.leftPercent,\r\n      isDragging: false,\r\n    };\r\n  },\r\n  methods: {\r\n    mobileDragCol(e) {\r\n      e = e || window.event;\r\n      e.stopPropagation();\r\n      let oldPos = e.changedTouches[0].clientX;\r\n      let oldPosPercent = this.left;\r\n      let newPos = 0;\r\n      let newPosPercent = 0;\r\n      const containerWidth = this.$refs.container.offsetWidth;\r\n      const vue = this;\r\n      this.isDragging = true;\r\n      this.$emit(\"isDragging\", this.isDragging);\r\n      document.ontouchmove = sliderDrag;\r\n      document.ontouchend = cancelSliderDrag;\r\n      function sliderDrag(e) {\r\n        if (this.time && Date.now() - this.time < 40) return;\r\n        this.time = Date.now();\r\n        e = e || window.event;\r\n        e.stopPropagation();\r\n        newPos = e.changedTouches[0].clientX;\r\n        const movingDistancePercent = parseFloat(\r\n          (((oldPos - newPos) / containerWidth) * 100).toFixed(3)\r\n        );\r\n        newPosPercent = oldPosPercent - movingDistancePercent;\r\n        if (newPosPercent <= 0) {\r\n          vue.left = 0;\r\n        } else if (newPosPercent >= 100) {\r\n          vue.left = 100;\r\n        } else {\r\n          vue.left = newPosPercent;\r\n        }\r\n        vue.$emit(\"dragging\", vue.left);\r\n      }\r\n      function cancelSliderDrag() {\r\n        vue.isDragging = false;\r\n        vue.$emit(\"isDragging\", vue.isDragging);\r\n        document.ontouchmove = null;\r\n        document.ontouchend = null;\r\n      }\r\n    },\r\n    dragCol(e) {\r\n      e = e || window.event;\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      let oldPos = e.clientX;\r\n      let oldPosPercent = this.left;\r\n      let newPos = 0;\r\n      let newPosPercent = 0;\r\n      const containerWidth = this.$refs.container.offsetWidth;\r\n      const vue = this;\r\n      this.isDragging = true;\r\n      this.$emit(\"isDragging\", this.isDragging);\r\n      document.onmousemove = sliderDrag;\r\n      document.onmouseup = cancelSliderDrag;\r\n      function sliderDrag(e) {\r\n        if (this.time && Date.now() - this.time < 40) return;\r\n        this.time = Date.now();\r\n        e = e || window.event;\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        newPos = e.clientX;\r\n        const movingDistancePercent = parseFloat(\r\n          (((oldPos - newPos) / containerWidth) * 100).toFixed(3)\r\n        );\r\n        newPosPercent = oldPosPercent - movingDistancePercent;\r\n        if (newPosPercent <= 0) {\r\n          vue.left = 0;\r\n        } else if (newPosPercent >= 100) {\r\n          vue.left = 100;\r\n        } else {\r\n          vue.left = newPosPercent;\r\n        }\r\n        vue.$emit(\"dragging\", vue.left);\r\n      }\r\n      function cancelSliderDrag() {\r\n        vue.isDragging = false;\r\n        vue.$emit(\"isDragging\", vue.isDragging);\r\n        document.onmouseup = null;\r\n        document.onmousemove = null;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.drager_col {\r\n  overflow: hidden;\r\n  display: flex;\r\n  box-sizing: border-box;\r\n}\r\n.drager_col * {\r\n  box-sizing: border-box;\r\n}\r\n.drager_col > div {\r\n  height: 100%;\r\n}\r\n.drager_left {\r\n  padding-right: 10px;\r\n}\r\n.drager_left > div {\r\n  height: 100%;\r\n  overflow: hidden;\r\n}\r\n.drager_right {\r\n  padding-left: 10px;\r\n}\r\n.drager_right > div {\r\n  height: 100%;\r\n  overflow: hidden;\r\n}\r\n.drager_col > .slider_col {\r\n  transition: background 0.2s;\r\n  position: relative;\r\n  z-index: 1;\r\n  cursor: col-resize;\r\n  background: v-bind(\"sliderBgColor\");\r\n}\r\n.drager_col > .slider_col:before {\r\n  transition: background-color 0.2s;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 31%;\r\n  transform: translateY(-50%);\r\n  content: \"\";\r\n  display: block;\r\n  width: 1px;\r\n  height: 24%;\r\n  min-height: 30px;\r\n  max-height: 70px;\r\n  background-color: v-bind(\"sliderColor\");\r\n}\r\n.drager_col > .slider_col:after {\r\n  transition: background-color 0.2s;\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 31%;\r\n  transform: translateY(-50%);\r\n  content: \"\";\r\n  display: block;\r\n  width: 1px;\r\n  height: 24%;\r\n  min-height: 30px;\r\n  max-height: 70px;\r\n  background-color: v-bind(\"sliderColor\");\r\n}\r\n.drager_col > .slider_col:hover:before,\r\n.drager_col > .slider_col:hover:after,\r\n.drager_col > .slider_col:active:before,\r\n.drager_col > .slider_col:active:after {\r\n  background-color: v-bind(\"sliderHoverColor\");\r\n}\r\n.drager_col > .slider_col:hover,\r\n.drager_col > .slider_col:active {\r\n  background: v-bind(\"sliderBgHoverColor\");\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}